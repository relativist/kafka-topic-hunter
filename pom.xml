<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <artifactId>web-spring-boot-parent</artifactId>
        <groupId>ru.element.lab</groupId>
        <version>0.5.0-SNAPSHOT</version>
        <relativePath/>
    </parent>

    <artifactId>kafka-topic-hunter</artifactId>
    <version>0.0.1</version>
    <name>kafka-topic-hunter</name>
    <description>Дедупликация данных в постобработке загрузки в greenplum</description>

    <properties>
        <postgresql.version>42.4.2</postgresql.version>
        <springdoc-openapi.version>1.6.4</springdoc-openapi.version>
        <testcontainers.version>1.17.3</testcontainers.version>
        <semd.xml2datanode-parser.version>0.0.4</semd.xml2datanode-parser.version>
        <spring-dbunit.version>1.3.0</spring-dbunit.version>
        <dbunit.version>2.7.0</dbunit.version>
        <big-starter.version>0.3.0-SNAPSHOT</big-starter.version>
        <metamodel-api-version>0.2.0-SNAPSHOT</metamodel-api-version>
        <metadata-mapping-api-version>0.3.2-SNAPSHOT</metadata-mapping-api-version>
        <big-kafka.version>0.1.0-SNAPSHOT</big-kafka.version>
        <awaitility.version>3.0.0</awaitility.version>
        <emd.api.version>0.2.0-SNAPSHOT</emd.api.version>
    </properties>

    <repositories>
        <repository>
            <id>el-maven-releases</id>
            <name>Artifactory</name>
            <url>https://registry.element-lab.ru/repository/maven-releases</url>
        </repository>

        <repository>
            <id>el-maven-snapshots</id>
            <name>Artifactory</name>
            <url>https://registry.element-lab.ru/repository/maven-snapshots</url>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>always</updatePolicy>
            </snapshots>
        </repository>
    </repositories>

    <dependencies>
        <!-- Swagger -->
        <!--suppress VulnerableLibrariesLocal -->
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-ui</artifactId>
            <version>${springdoc-openapi.version}</version>
        </dependency>
        <dependency>
            <!-- Для корректной работы swagger. Позволяет редактировать тело сообщения перед отправкой -->
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-webflux-ui</artifactId>
            <version>${springdoc-openapi.version}</version>
        </dependency>
        <!--suppress VulnerableLibrariesLocal -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-cache</artifactId>
        </dependency>
        <dependency>
            <groupId>com.github.ben-manes.caffeine</groupId>
            <artifactId>caffeine</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aspects</artifactId>
        </dependency>
        <dependency>
            <groupId>ru.element.lab</groupId>
            <artifactId>big-starter</artifactId>
            <version>${big-starter.version}</version>
        </dependency>
        <dependency>
            <groupId>ru.element.lab</groupId>
            <artifactId>big-kafka-starter</artifactId>
            <version>${big-kafka.version}</version>
        </dependency>
        <!--suppress VulnerableLibrariesLocal -->
        <dependency>
            <groupId>org.springframework.kafka</groupId>
            <artifactId>spring-kafka</artifactId>
        </dependency>
        <!--suppress VulnerableLibrariesLocal -->

        <!--suppress VulnerableLibrariesLocal -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jdbc</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>6.0.16.Final</version>
        </dependency>
        <!--suppress VulnerableLibrariesLocal -->
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>${postgresql.version}</version>
        </dependency>
        <dependency>
            <groupId>ru.element.lab</groupId>
            <artifactId>emd-streaming-api</artifactId>
            <version>${emd.api.version}</version>
            <exclusions>
                <!--  delete slf4j bindings  -->
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-reload4j</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- Test scope -->
        <!--suppress VulnerableLibrariesLocal -->
        <dependency>
            <groupId>org.springframework.kafka</groupId>
            <artifactId>spring-kafka-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>kafka</artifactId>
            <version>${testcontainers.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>junit</groupId>
                    <artifactId>junit</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>postgresql</artifactId>
            <version>${testcontainers.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>1.17.4</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-test</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-test-autoconfigure</artifactId>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-all</artifactId>
            <version>1.3</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.awaitility</groupId>
            <artifactId>awaitility</artifactId>
            <version>${awaitility.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.awaitility</groupId>
            <artifactId>awaitility-proxy</artifactId>
            <version>3.0.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>
    </dependencies>

    <dependencyManagement>
        <!-- fix java.lang.NoClassDefFoundError: org/codehaus/janino/InternalCompilerException -->
        <dependencies>
            <dependency>
                <groupId>org.codehaus.janino</groupId>
                <artifactId>commons-compiler</artifactId>
                <version>3.0.11</version>
            </dependency>
            <dependency>
                <groupId>org.codehaus.janino</groupId>
                <artifactId>janino</artifactId>
                <version>3.0.11</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

</project>
